{"version":3,"sources":["Components/dynamic/Header.jsx","Components/static/Course.js","Components/dynamic/ManageInput.jsx","Components/static/darkColors.js","Components/static/lightColors.js","Components/dynamic/Time.jsx","Components/dynamic/Days.jsx","Table.jsx","theme.js","Components/dynamic/Warning.jsx","Components/dynamic/IconManager.jsx","index.js"],"names":["Header","box","useColorModeValue","htmlFor","my","fontSize","color","Course","AddItem","props","toast","useToast","useState","value","setValue","focus","buttonDisplay","xs","sm","md","lg","handleAdd","handleTable","handleState","title","status","duration","isClosable","variant","list","id","w","type","borderWidth","listStyleImg","mt","p","placeholder","borderColor","errorBorderColor","focusBorderColor","onChange","e","target","_placeholder","onKeyPress","key","display","map","item","index","Section","Name","Code","Type","onClick","ml","textColor","backgroundColor","addColor","_hover","background","_focus","handleRemove","removeColor","darkColors","lightColors","Time","text","className","h","templateColumns","position","flexDir","alignItems","left","gap","width","top","fontWeight","Days","border","margin","Table","colorMode","useColorMode","addButtonColor","removeButtonColor","empty","reload","Array","time","fill","table","setTable","useReducer","x","forceUpdate","prev","forEach","element","justifyContent","flexDirection","mb","ManageInput","course","find","hour","Hour","randomDark","Math","floor","random","length","randomLight","i","Repeat","Object","assign","darkColor","lightColor","label","cursor","d","opacity","fontFamily","Minus","transform","breakpoints","createBreakpoints","theme","extendTheme","styles","global","body","Warning","overflowX","mx","IconManager","toggleColorMode","right","m","Moon","Sun","href","bottom","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4320cf8e.chunk.js","sourcesContent":["/** @format */\n\nimport React from \"react\";\nimport { useColorModeValue, Center, Text } from \"@chakra-ui/react\";\n\nconst Header = () => {\n  const box = useColorModeValue(\"gray.900\", \"gray.100\");\n  return (\n    <label htmlFor=\"selector\">\n    <Center my=\"2\">\n      <Text fontSize={[\"25px\", \"30px\", \"32px\"]} color={box} >\n        6x9 Generator\n      </Text>\n    </Center>\n    </label>\n  );\n};\n\nexport default Header;\n","const Course = \n[{\"ID\": 1, \"Code\": \"MATHF211\", \"Name\": \"Mathematics III\", \"Type\": \"Lecture\", \"Hour\": [4], \"Repeat\": \"3\", \"Section\": \"JK Sahoo\"}, {\"ID\": 2, \"Code\": \"MATHF211\", \"Name\": \"Mathematics III Tutorial\", \"Type\": \"Tutorial\", \"Hour\": [0], \"Repeat\": 1, \"Section\": \"Bibekananda Sitha\"}, {\"ID\": 3, \"Code\": \"CSF222\", \"Name\": \"Discrete Math for CS\", \"Type\": \"Lecture\", \"Hour\": [2], \"Repeat\": \"3\", \"Section\": \"Anup Basil Mathew\"}, {\"ID\": 4, \"Code\": \"CSF222\", \"Name\": \"Discrete Math Tutorial\", \"Type\": \"Tutorial\", \"Hour\": [18], \"Repeat\": 1, \"Section\": \"Teaching Assistants\"}, {\"ID\": 5, \"Code\": \"CSF214\", \"Name\": \"Logic in CS\", \"Type\": \"Lecture\", \"Hour\": [3], \"Repeat\": \"3\", \"Section\": \"A Baskar\"}, {\"ID\": 6, \"Code\": \"CSF214\", \"Name\": \"Logic in CS Tutorial\", \"Type\": \"Tutorial\", \"Hour\": [9], \"Repeat\": 1, \"Section\": \"A Baskar\"}, {\"ID\": 7, \"Code\": \"CSF215\", \"Name\": \"Digital Design\", \"Type\": \"Lecture\", \"Hour\": [1], \"Repeat\": \"3\", \"Section\": \"Ravi Kadlimatti\"}, {\"ID\": 8, \"Code\": \"CSF215\", \"Name\": \"Digital Design Tutorial\", \"Type\": \"Tutorial\", \"Hour\": [44], \"Repeat\": 1, \"Section\": \"Ravi Kadlimatti\"}, {\"ID\": 9, \"Code\": \"CSF215\", \"Name\": \"Digital Design Lab\", \"Type\": \"Lab\", \"Hour\": [14], \"Repeat\": 2, \"Section\": \"Hrishikesh Sonalikar\"}, {\"ID\": 10, \"Code\": \"GSF322\", \"Name\": \"Critical Analysis of Literature and Cinema\", \"Type\": \"Lecture\", \"Hour\": [10], \"Repeat\": \"3\", \"Section\": \"Geeta B\"}, {\"ID\": 11, \"Code\": \"CSF213\", \"Name\": \"Object Oriented Programming\", \"Type\": \"Lecture\", \"Hour\": [11], \"Repeat\": \"3\", \"Section\": \"Neena Goveas\"}, {\"ID\": 12, \"Code\": \"CSF213\", \"Name\": \"Object Oriented Programming Lab\", \"Type\": \"Lab\", \"Hour\": [34], \"Repeat\": 2, \"Section\": \"Group VIII\"}]\nexport default Course;","/** @format */\n\nimport React, { useState } from \"react\";\nimport { Input, useColorModeValue, useToast, Button } from \"@chakra-ui/react\";\nimport Course from \"../static/Course\";\n\nconst AddItem = (props) => {\n  const toast = useToast();\n  const [value, setValue] = useState(\"\");\n  const box = useColorModeValue(\"gray.400\", \"gray.200\");\n  const focus = useColorModeValue(\"gray.600\", \"gray.100\");\n  const buttonDisplay = {\n    xs: \"none\",\n    sm : \"none\",\n    md : \"inline-block\",\n    lg : \"inline-block\"\n\n  }\n\n  const handleAdd = () => {\n    if (value) {\n      props.handleTable(value);\n      props.handleState();\n    }\n    else if(value === \"\"){\n      toast({\n        title: \"No course to add!\",\n        status: \"warning\",\n        duration: 1400,\n        isClosable: false,\n        variant: \"subtle\",\n      })\n    }\n    setValue(\"\");\n  };\n\n  const handleKey = (e) => {\n    if (e.key === \"Enter\") {\n      handleAdd();\n    }\n  };\n\n  const handleDelete = () => {\n    if (value) {\n      props.handleRemove(value);\n      props.handleState();\n    }\n    else if(value === \"\"){\n      toast({\n        title: \"No course to remove!\",\n        status: \"warning\",\n        duration: 1400,\n        isClosable: false,\n        variant: \"subtle\"\n      })\n    }\n    setValue(\"\");\n  };\n\n  return (\n    <div>\n      <Input\n        list=\"courses\"\n        id=\"selector\"\n        w={[\"50vw\", \"45vw\", \"30vw\"]}\n        type=\"text\"\n        borderWidth=\"thin\"\n        listStyleImg=\"revert\"\n        mt=\"3\"\n        p=\"1em\"\n        placeholder=\"Search Courses\"\n        borderColor={box}\n        errorBorderColor=\"crimson\"\n        focusBorderColor={focus}\n        onChange={(e) => setValue(e.target.value)}\n        value={value}\n        _placeholder={{color : focus}}\n        variant=\"outline\"\n        onKeyPress={handleKey}\n        display ={{\n          xs : \"none\",\n          sm : \"none\",\n          md : \"inline-block\",\n          lg : \"inline-block\"\n        }}\n      />\n      <datalist id=\"courses\" >\n        {Course.map((item, index) => {\n          return item.Section ? (\n            <option value={item.Name} key={index} >\n              {item.Code} {item.Type} : {item.Section}\n            </option>\n          ) : (\n            <option value={item.Name} key={index} >\n              {item.Code} {item.Type}\n            </option>\n          );\n        })}\n      </datalist>\n      <Button\n        onClick={handleAdd}\n        ml={[\"20px\", \"30px\", \"35px\"]}\n        color={props.textColor}\n        backgroundColor={props.addColor}\n        _hover={{ background: props.color }}\n        _focus={{ _focus: \"none\" }}\n        display ={buttonDisplay}\n      >\n        Add\n      </Button>\n      <Button\n        onClick={handleDelete}\n        ml={[\"20px\", \"30px\", \"30px\"]}\n        color={props.textColor}\n        backgroundColor={props.removeColor}\n        _hover={{ background: props.color }}\n        _focus={{ _focus: \"none\" }}\n        display ={buttonDisplay}\n      >\n        Remove\n        </Button>\n    </div>\n  );\n};\n\nexport default AddItem;\n","const darkColors = [\n    \"pink.900\",\n    \"purple.900\",\n    \"cyan.900\",\n    \"teal.900\",\n    \"green.900\",\n    \"red.900\",\n    \"gray.800\"\n]\n\nexport default darkColors;","const lightColors = [\n    \"purple.100\",\n    \"cyan.100\",\n    \"teal.50\",\n    \"yellow.100\"\n]\n\nexport default lightColors;","/** @format */\n\nimport React from \"react\";\nimport { Grid, GridItem, Center,useColorModeValue } from \"@chakra-ui/react\";\n\nconst Time = () => {\n  const time = [ \"8:00\", \"9:00\" , \"10:00\", \"11:00\", \"12:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\"];\n  const text = useColorModeValue(\"gray.900\", \"gray.100\");\n\n  return (\n    <Grid className=\"TimeRow\" h=\"80px\" templateColumns=\"repeat(9, 1fr)\" position=\"relative\" display=\"flex\" flexDir=\"row\" alignItems=\"flex-end\" left=\"4vw\" >\n      {time.map((item, index) => {\n        return (\n          <GridItem\n          key={index}\n            gap={2}\n            h={[\"72.2px\"]}\n            width={[\"9vw\" , \"9vw\", \"9vw\"]}\n            borderWidth=\"0.5px\"\n            borderColor={text}\n            backgroundColor=\"transparent\"\n            textColor={text}\n            display={{\n              xs : \"none\",\n              sm : \"none\",\n              md : \"block\",\n              lg : \"block\"\n        \n            }}\n          >\n            <Center\n              position=\"relative\"\n              top=\"30%\"\n              fontSize=\"0.88em\"\n              fontWeight=\"semibold\"\n            >\n              {item}\n            </Center>\n          </GridItem>\n        );\n      })}\n    </Grid>\n  );\n};\n\nexport default Time;\n","/** @format */\n\nimport React from \"react\";\nimport { Grid, GridItem, Center, useColorModeValue } from \"@chakra-ui/react\";\n\nconst Days = () => {\n  const days = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  const text = useColorModeValue(\"gray.900\", \"gray.100\");\n  return (\n    <Grid\n      className=\"DaysCol\"\n      h=\"100px\"\n      templateColumns=\"repeat(1, 1fr)\"\n      display={{\n        xs : \"none\",\n        sm: \"none\",\n        md: \"block\",\n        lg: \"block\",\n      }}\n      position=\"relative\"\n      left=\"-40.5vw\"\n    >\n      {days.map((item, index) => {\n        return (\n          <GridItem\n            key={index}\n            gap={1}\n            h={[\"72.2px\"]}\n            w={[\"50px\", \"100px\", \"123px\"]}\n            border=\"1px\"\n            borderColor={text}\n            backgroundColor=\"transparent\"\n            textColor={text}\n          >\n            <Center\n              position=\"relative\"\n              top=\"30%\"\n              left={[\"-5px\", \"-8px\", \"0\"]}\n              fontSize=\"0.85em\"\n              fontWeight=\"semibold\"\n              margin=\"auto\"\n            >\n              {item}\n            </Center>\n          </GridItem>\n        );\n      })}\n    </Grid>\n  );\n};\n\nexport default Days;\n","import React, { useState, useReducer } from \"react\";\nimport {\n  Flex,\n  useColorModeValue,\n  useColorMode,\n  Grid,\n  GridItem,\n  Center,\n  Tooltip,\n  Icon,\n  Box,\n  useToast\n} from \"@chakra-ui/react\";\nimport { MinusIcon } from \"@chakra-ui/icons\";\nimport Header from \"./Components/dynamic/Header\";\nimport ManageInput from \"./Components/dynamic/ManageInput\";\nimport Course from \"./Components/static/Course\";\nimport darkColors from \"./Components/static/darkColors\";\nimport lightColors from \"./Components/static/lightColors\";\nimport Time from \"./Components/dynamic/Time\";\nimport Days from \"./Components/dynamic/Days\";\n\nfunction Table() {\n  const toast = useToast();\n  //coloring\n  const { colorMode } = useColorMode();\n  const borderColor = useColorModeValue(\"gray.800\", \"gray.100\");\n  const addButtonColor = useColorModeValue(\"teal.700\", \"green.100\");\n  const removeButtonColor = useColorModeValue(\"red.600\", \"red.200\");\n  const empty = useColorModeValue(\"gray.100\", \"gray.800\");\n  const reload = useColorModeValue(\"blue.900\", \"cyan.300\");\n\n  // array handling\n  let [days, time] = [6, 9];\n  const [table, setTable] = useState(Array(time * days).fill(null));\n\n  const handleTable = (value) => {\n    const course = Course.find((item) => item.Name === value);\n    if (course) {\n      let hour = course.Hour;\n      let randomDark =\n        darkColors[Math.floor(Math.random() * darkColors.length)];\n      let randomLight =\n        lightColors[Math.floor(Math.random() * lightColors.length)];\n      setTable((prev) => {\n        let i;\n        for (i = 0; i < course.Repeat - 1; i++) {\n          course.Type === \"Lab\"\n            ? (hour[i + 1] = hour[i] + 1)\n            : (hour[i + 1] = 2 * time + hour[i]);\n        }\n        for (i = 0; i < 3; i++) {\n          prev[hour[i]] = course;\n          Object.assign(course, { darkColor: randomDark });\n          Object.assign(course, { lightColor: randomLight });\n        }\n\n        return prev;\n      });\n    }\n  };\n\n  // force rerender\n  const [, forceUpdate] = useReducer((x) => x + 1, 0);\n\n  const handleRemove = (id) => {\n    setTable((prev) => {\n      prev.forEach((element, index) => {\n        if (element && id === element.Name) {\n          prev[index] = null;\n        }\n      });\n      return prev;\n    });\n    forceUpdate();\n  };\n\n  return (\n    <div>\n      <Flex\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        flexDirection=\"column\"\n        mb=\"2\"\n      >\n        <Header />\n        <Box\n          display=\"flex\"\n          mt=\"5\"\n          mb=\"5\"\n          flexDir=\"row\"\n          justifyContent=\"flex-start\"\n        >\n          <ManageInput\n            handleTable={handleTable}\n            handleState={() => forceUpdate()}\n            textColor={empty}\n            addColor={addButtonColor}\n            removeColor={removeButtonColor}\n            handleRemove={handleRemove}\n          />\n\n          <Tooltip label=\"Reset the table\">\n            <Icon\n              ml=\"8\"\n              my=\"5\"\n              color={reload}\n              fontSize=\"2.65em\"\n              fontWeight=\"bold\"\n              onClick={() => {\n                setTable(Array(time * days).fill(null))\n                toast({\n                  title: \"Table has been reset.\",\n                  status: \"success\",\n                  duration: 1200,\n                  isClosable: false,\n                  variant: \"left-accent\",\n                  position:\"bottom\"\n                  \n                })\n              }\n              }\n              cursor=\"pointer\"\n              display={{\n                xs: \"none\",\n                sm: \"none\",\n                md: \"block\",\n                lg: \"block\",\n              }}\n            >\n              <path\n                fill=\"currentColor\"\n                d=\"M13.6,2.4 C12.2,0.9 10.2,0 8,0 C3.6,0 0,3.6 0,8 C0,12.4 3.6,16 8,16 C11.7,16 14.8,13.4 15.7,10 L13.6,10 C12.8,12.3 10.6,14 8,14 C4.7,14 2,11.3 2,8 C2,4.7 4.7,2 8,2 C9.7,2 11.1,2.7 12.2,3.8 L9,7 L16,7 L16,0 L13.6,2.4 L13.6,2.4 Z\"\n              />\n            </Icon>\n          </Tooltip>\n        </Box>\n        <Time />\n        <Days />\n        <Grid\n          templateColumns=\"repeat(9,1fr)\"\n          position=\"relative\"\n          left=\"4vw\"\n          top=\"-100px\"\n          display={{\n            xs: \"none\",\n            sm: \"none\",\n            md: \"grid\",\n            lg: \"grid\",\n          }}\n        >\n          {table.map((item, index) => {\n            return item ? (\n              <GridItem\n                key={index}\n                h={[\"72.2px\"]}\n                opacity=\"0.95\"\n                w={[\"50px\", \"9vw\"]}\n                borderColor=\"transparent\"\n                fontFamily=\"Fira Code\"\n                backgroundColor={\n                  colorMode === \"light\" ? item.darkColor : item.lightColor\n                }\n                color={empty}\n                fontWeight=\"900\"\n              >\n                <Center\n                  position=\"relative\"\n                  top={[\"0%\", \"25%\", \"20%\"]}\n                  fontSize={{\n                    xs: \"0\",\n                    sm: \"0\",\n                    md: \"11px\",\n                    lg: \"0.82em\",\n                  }}\n                >\n                  <Tooltip label={item.Section}>\n                    <Box cursor=\"default\">\n                    {item.Code}\n                      <br />\n                      {item.Type}\n                      </Box>\n                    </Tooltip>\n                    <MinusIcon\n                      onClick={() => handleRemove(item.Name)}\n                      position=\"relative\"\n                      transform=\"translate(80%,-120%)\"\n                      display={{\n                        xs: \"none\",\n                        sm: \"none\",\n                        md: \"none\",\n                        lg: \"block\",\n                      }}\n                      color={empty}\n                      fontSize=\"1.09em\"\n                      cursor=\"pointer\"\n                    />\n                </Center>\n              </GridItem>\n            ) : (\n              <GridItem\n                key={index}\n                h={[\"72.2px\"]}\n                w=\"9vw\"\n                borderWidth=\"0.02px\"\n                borderColor={borderColor}\n                backgroundColor={empty}\n              />\n            );\n          })}\n        </Grid>\n      </Flex>\n    </div>\n  );\n}\n\nexport default Table;\n","import { extendTheme } from \"@chakra-ui/react\"\nimport { createBreakpoints } from \"@chakra-ui/theme-tools\"\n\nconst breakpoints = createBreakpoints({\n  xs : \"0px\",\n  sm: \"470px\",\n  md: \"650px\",\n  lg: \"1200px\"\n})\n\n\nconst theme = extendTheme({ \n    breakpoints,\n    styles : {\n        global : {\n            body : {\n                fontFamily : \"Nunito\",\n            }\n        }\n    }\n})\n\nexport default theme;","import { Center, Flex } from \"@chakra-ui/layout\";\nimport React from \"react\";\n\nconst Warning = () => {\n  return (\n    <Flex\n      display={{\n        xs: \"block\",\n        sm: \"block\",\n        md: \"none\",\n        lg: \"none\",\n      }}\n      position=\"relative\"\n      top=\"50vh\"\n      margin=\"auto\"\n      fontSize=\"1.2em\"\n      overflowX=\"hidden\"\n    >\n      <Center mx=\"10\">\n        Please switch to Landscape mode or a wider screen for utilizing the\n        application.\n      </Center>\n    </Flex>\n  );\n};\n\nexport default Warning;\n","import React from \"react\";\nimport { SunIcon, MoonIcon } from \"@chakra-ui/icons\";\nimport {\n  Box,\n  Tooltip,\n  Container,\n  useColorMode,\n  Icon,\n  Link,\n  Center,\n  Text,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\n\nconst IconManager = () => {\n  const { colorMode, toggleColorMode } = useColorMode();\n  const box = useColorModeValue(\"gray.900\", \"white\");\n  return (\n    <Container>\n      <Tooltip label=\"Toggle Color mode\">\n        <Box\n          onClick={toggleColorMode}\n          position=\"absolute\"\n          top=\"1px\"\n          right=\"60px\"\n          m=\"3.5\"\n          cursor=\"pointer\"\n        >\n          {colorMode === \"light\" ? (\n            <MoonIcon color=\"gray.900\" fontSize=\"3xl\" />\n          ) : (\n            <SunIcon color=\"gray.100\" fontSize=\"3xl\" />\n          )}\n        </Box>\n      </Tooltip>\n      <Link href=\"https://github.com/priyansh71/6x9-Generator\">\n        <Icon\n          color={box}\n          fontSize=\"2em\"\n          position=\"absolute\"\n          top=\"0\"\n          right=\"5px\"\n          m=\"3.5\"\n          cursor=\"pointer\"\n        >\n          <path\n            fill=\"currentColor\"\n            d=\"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\"\n          />\n        </Icon>\n      </Link>\n      <Center mx=\"4\" mb=\"0\" position=\"absolute\" bottom=\"2\" right=\"0\">\n        <Text fontSize={[\"16px\"]} color={box}>\n          Copyright, Priyansh Vyas, 2021.\n        </Text>\n      </Center>\n    </Container>\n  );\n};\n\nexport default IconManager;\n","/** @format */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Table from \"./Table.jsx\";\nimport theme from \"./theme\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport Warning from \"./Components/dynamic/Warning\";\nimport IconManager from \"./Components/dynamic/IconManager\";\n\nReactDOM.render(\n    <ChakraProvider theme={theme}>\n      <IconManager />\n      <Warning />\n      <Table />\n    </ChakraProvider>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}